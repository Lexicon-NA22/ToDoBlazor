 <div class="container">
        <ul id="toDoItems" class="list-group align-self-sm-stretch mt-4">
        @foreach(var item in TodoItems)
        {
           <li @onclick="() => ItemCompleted(item)" class="list-group-item @(item.Completed ? "change" : "")">@item.Text<button @onclick="() => Remove(item)" @onclick:stopPropagation="true" type="button" class="btn btn-danger">X</button></li>
        }
         @* <li class="list-group-item">Mjölk<button type="button" class="btn btn-danger">X</button></li>
          <li class="list-group-item">Bananer<button type="button" class="btn btn-danger">X</button></li> *@
        </ul>
      </div>

@code {

    [Parameter]
    public List<Item> TodoItems { get; set; } = null!;


    private async Task ItemCompleted(Item item)
    {
        item.Completed = item.Completed ? false : true;
        var response = await httpClient.PutAsJsonAsync<Item>($"api/todo/{item.Id}", item);

        if (!response.IsSuccessStatusCode)
        {
            item.Completed = item.Completed ? false : true;
        }
    }

    private async Task Remove(Item item)
    {
        var response = await httpClient.DeleteAsync($"api/todo/{item.Id}");

        if (response.IsSuccessStatusCode)
        {
            TodoItems.Remove(item);
        }
    }

}
